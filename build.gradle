buildscript {
    ext.kotlin_version = '1.8.0'
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'org.example'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'antlr'

repositories {
    mavenCentral()
    mavenLocal()
    // For IDE dev
    flatDir {
        dirs 'local_dependencies'
    }
}

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

dependencies {
    // Regex generator
    implementation 'com.github.mifmif:generex:1.0.1'
    implementation 'org.jetbrains.kotlin.spec.grammar.tools:kotlin-grammar-tools:0.1'
    implementation 'org.json:json:20220320'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation "org.mockito:mockito-core:3.+"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    antlr "org.antlr:antlr4:4.7.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

task uberJar(type: Jar) {
    archiveBaseName = 'kotlin-compiler-fuzzer'
    archiveVersion =  '0.1.0'
    archiveClassifier = 'uber'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from sourceSets.main.output

    manifest {
        attributes 'Main-Class': 'org.fuzzer.Main',
                'Implementation-Version': project.version
    }

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') || it.isDirectory() }.collect { zipTree(it) }
    }
}